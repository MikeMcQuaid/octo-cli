// Code generated by octo-cli/generator; DO NOT EDIT.

package generated

import "github.com/octo-cli/octo-cli/internal"

type ChecksCmd struct {
	CreateSuite      ChecksCreateSuiteCmd      `cmd:""`
	Get              ChecksGetCmd              `cmd:""`
	GetSuite         ChecksGetSuiteCmd         `cmd:""`
	ListAnnotations  ChecksListAnnotationsCmd  `cmd:""`
	ListForRef       ChecksListForRefCmd       `cmd:""`
	ListForSuite     ChecksListForSuiteCmd     `cmd:""`
	ListSuitesForRef ChecksListSuitesForRefCmd `cmd:""`
	RerequestSuite   ChecksRerequestSuiteCmd   `cmd:""`
}

type ChecksCreateSuiteCmd struct {
	internal.BaseCmd
	Antiope bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	HeadSha string `required:"" name:"head_sha"`
	Owner   string `name:"owner"`
	Repo    string `required:"" name:"repo"`
}

func (c *ChecksCreateSuiteCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-suites")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateBody("head_sha", c.HeadSha)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("POST")
}

type ChecksGetCmd struct {
	internal.BaseCmd
	Antiope    bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckRunId int64  `required:"" name:"check_run_id"`
	Owner      string `name:"owner"`
	Repo       string `required:"" name:"repo"`
}

func (c *ChecksGetCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-runs/:check_run_id")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLPath("check_run_id", c.CheckRunId)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("GET")
}

type ChecksGetSuiteCmd struct {
	internal.BaseCmd
	Antiope      bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckSuiteId int64  `required:"" name:"check_suite_id"`
	Owner        string `name:"owner"`
	Repo         string `required:"" name:"repo"`
}

func (c *ChecksGetSuiteCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-suites/:check_suite_id")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLPath("check_suite_id", c.CheckSuiteId)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("GET")
}

type ChecksListAnnotationsCmd struct {
	internal.BaseCmd
	Antiope    bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckRunId int64  `required:"" name:"check_run_id"`
	Owner      string `name:"owner"`
	Page       int64  `name:"page"`
	PerPage    int64  `name:"per_page"`
	Repo       string `required:"" name:"repo"`
}

func (c *ChecksListAnnotationsCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-runs/:check_run_id/annotations")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLPath("check_run_id", c.CheckRunId)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("GET")
}

type ChecksListForRefCmd struct {
	internal.BaseCmd
	Antiope   bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckName string `name:"check_name"`
	Filter    string `name:"filter"`
	Owner     string `name:"owner"`
	Page      int64  `name:"page"`
	PerPage   int64  `name:"per_page"`
	Ref       string `required:"" name:"ref"`
	Repo      string `required:"" name:"repo"`
	Status    string `name:"status"`
}

func (c *ChecksListForRefCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/commits/:ref/check-runs")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLQuery("check_name", c.CheckName)
	c.UpdateURLQuery("filter", c.Filter)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLPath("ref", c.Ref)
	c.UpdateURLPath("repo", c.Repo)
	c.UpdateURLQuery("status", c.Status)
	return c.DoRequest("GET")
}

type ChecksListForSuiteCmd struct {
	internal.BaseCmd
	Antiope      bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckName    string `name:"check_name"`
	CheckSuiteId int64  `required:"" name:"check_suite_id"`
	Filter       string `name:"filter"`
	Owner        string `name:"owner"`
	Page         int64  `name:"page"`
	PerPage      int64  `name:"per_page"`
	Repo         string `required:"" name:"repo"`
	Status       string `name:"status"`
}

func (c *ChecksListForSuiteCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-suites/:check_suite_id/check-runs")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLQuery("check_name", c.CheckName)
	c.UpdateURLPath("check_suite_id", c.CheckSuiteId)
	c.UpdateURLQuery("filter", c.Filter)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLPath("repo", c.Repo)
	c.UpdateURLQuery("status", c.Status)
	return c.DoRequest("GET")
}

type ChecksListSuitesForRefCmd struct {
	internal.BaseCmd
	Antiope   bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	AppId     int64  `name:"app_id"`
	CheckName string `name:"check_name"`
	Owner     string `name:"owner"`
	Page      int64  `name:"page"`
	PerPage   int64  `name:"per_page"`
	Ref       string `required:"" name:"ref"`
	Repo      string `required:"" name:"repo"`
}

func (c *ChecksListSuitesForRefCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/commits/:ref/check-suites")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLQuery("app_id", c.AppId)
	c.UpdateURLQuery("check_name", c.CheckName)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLPath("ref", c.Ref)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("GET")
}

type ChecksRerequestSuiteCmd struct {
	internal.BaseCmd
	Antiope      bool   "name:\"antiope-preview\" required:\"\" help:\"The Checks API is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2018-05-07-new-checks-api-public-beta/) for full details. To access the API during the preview period, you must provide a custom [media type](https://developer.github.com/v3/media) in the `Accept` header:\n```shell\napplication/vnd.github.antiope-preview+json\n```\""
	CheckSuiteId int64  `required:"" name:"check_suite_id"`
	Owner        string `name:"owner"`
	Repo         string `required:"" name:"repo"`
}

func (c *ChecksRerequestSuiteCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/repos/:owner/:repo/check-suites/:check_suite_id/rerequest")
	c.UpdatePreview("antiope", c.Antiope)
	c.UpdateURLPath("check_suite_id", c.CheckSuiteId)
	c.UpdateURLPath("owner", c.Owner)
	c.UpdateURLPath("repo", c.Repo)
	return c.DoRequest("POST")
}
