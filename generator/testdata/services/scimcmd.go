// Code generated by octo-cli/generator; DO NOT EDIT.

package services

type ScimCmd struct {
	GetProvisionedIdentitiesList   ScimGetProvisionedIdentitiesListCmd   `cmd:"" help:"Get a list of provisioned identities"`
	GetProvisioningDetailsForUser  ScimGetProvisioningDetailsForUserCmd  `cmd:"" help:"Get provisioning details for a single user"`
	ProvisionInviteUsers           ScimProvisionInviteUsersCmd           `cmd:"" help:"Provision and invite users"`
	UpdateProvisionedOrgMembership ScimUpdateProvisionedOrgMembershipCmd `cmd:"" help:"Update a provisioned organization membership"`
	UpdateUserAttribute            ScimUpdateUserAttributeCmd            `cmd:"" help:"Update a user attribute"`
	RemoveUserFromOrg              ScimRemoveUserFromOrgCmd              `cmd:"" help:"Remove a user from the organization"`
}

type ScimGetProvisionedIdentitiesListCmd struct {
	baseCmd
	OrganizationId int64  `required:"" name:"organization_id"`
	StartIndex     int64  `name:"startIndex" help:"Used for pagination: the index of the first result to return"`
	Count          int64  `name:"count" help:"Used for pagination: the number of results to return"`
	Filter         string "name:\"filter\" help:\"Only `eq` type filters are supported\""
}

func (c *ScimGetProvisionedIdentitiesListCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users"
	c.updateURLPath("organization_id", c.OrganizationId)
	c.updateURLQuery("startIndex", c.StartIndex)
	c.updateURLQuery("count", c.Count)
	c.updateURLQuery("filter", c.Filter)
	return c.doRequest("GET")
}

type ScimGetProvisioningDetailsForUserCmd struct {
	baseCmd
	OrganizationId       int64  `required:"" name:"organization_id"`
	ExternalIdentityGuid string `required:"" name:"external_identity_guid"`
}

func (c *ScimGetProvisioningDetailsForUserCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users/:external_identity_guid"
	c.updateURLPath("organization_id", c.OrganizationId)
	c.updateURLPath("external_identity_guid", c.ExternalIdentityGuid)
	return c.doRequest("GET")
}

type ScimProvisionInviteUsersCmd struct {
	baseCmd
	OrganizationId int64 `required:"" name:"organization_id"`
}

func (c *ScimProvisionInviteUsersCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users"
	c.updateURLPath("organization_id", c.OrganizationId)
	return c.doRequest("POST")
}

type ScimUpdateProvisionedOrgMembershipCmd struct {
	baseCmd
	OrganizationId       int64  `required:"" name:"organization_id"`
	ExternalIdentityGuid string `required:"" name:"external_identity_guid"`
}

func (c *ScimUpdateProvisionedOrgMembershipCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users/:external_identity_guid"
	c.updateURLPath("organization_id", c.OrganizationId)
	c.updateURLPath("external_identity_guid", c.ExternalIdentityGuid)
	return c.doRequest("PUT")
}

type ScimUpdateUserAttributeCmd struct {
	baseCmd
	OrganizationId       int64  `required:"" name:"organization_id"`
	ExternalIdentityGuid string `required:"" name:"external_identity_guid"`
}

func (c *ScimUpdateUserAttributeCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users/:external_identity_guid"
	c.updateURLPath("organization_id", c.OrganizationId)
	c.updateURLPath("external_identity_guid", c.ExternalIdentityGuid)
	return c.doRequest("PATCH")
}

type ScimRemoveUserFromOrgCmd struct {
	baseCmd
	OrganizationId       int64  `required:"" name:"organization_id"`
	ExternalIdentityGuid string `required:"" name:"external_identity_guid"`
}

func (c *ScimRemoveUserFromOrgCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/scim/v2/organizations/:organization_id/Users/:external_identity_guid"
	c.updateURLPath("organization_id", c.OrganizationId)
	c.updateURLPath("external_identity_guid", c.ExternalIdentityGuid)
	return c.doRequest("DELETE")
}
