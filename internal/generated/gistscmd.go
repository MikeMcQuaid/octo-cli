// Code generated by octo-cli/generator; DO NOT EDIT.

package generated

import "github.com/octo-cli/octo-cli/internal"

type GistsCmd struct {
	CheckIsStarred GistsCheckIsStarredCmd `cmd:""`
	CreateComment  GistsCreateCommentCmd  `cmd:""`
	Delete         GistsDeleteCmd         `cmd:""`
	DeleteComment  GistsDeleteCommentCmd  `cmd:""`
	Fork           GistsForkCmd           `cmd:""`
	Get            GistsGetCmd            `cmd:""`
	GetComment     GistsGetCommentCmd     `cmd:""`
	GetRevision    GistsGetRevisionCmd    `cmd:""`
	List           GistsListCmd           `cmd:""`
	ListComments   GistsListCommentsCmd   `cmd:""`
	ListCommits    GistsListCommitsCmd    `cmd:""`
	ListForUser    GistsListForUserCmd    `cmd:""`
	ListForks      GistsListForksCmd      `cmd:""`
	ListPublic     GistsListPublicCmd     `cmd:""`
	ListStarred    GistsListStarredCmd    `cmd:""`
	Star           GistsStarCmd           `cmd:""`
	Unstar         GistsUnstarCmd         `cmd:""`
	UpdateComment  GistsUpdateCommentCmd  `cmd:""`
}

type GistsCheckIsStarredCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsCheckIsStarredCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/star")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("GET")
}

type GistsCreateCommentCmd struct {
	internal.BaseCmd
	Body   string `required:"" name:"body"`
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsCreateCommentCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/comments")
	c.UpdateBody("body", c.Body)
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("POST")
}

type GistsDeleteCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsDeleteCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("DELETE")
}

type GistsDeleteCommentCmd struct {
	internal.BaseCmd
	CommentId int64  `required:"" name:"comment_id"`
	GistId    string `required:"" name:"gist_id"`
}

func (c *GistsDeleteCommentCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/comments/:comment_id")
	c.UpdateURLPath("comment_id", c.CommentId)
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("DELETE")
}

type GistsForkCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsForkCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/forks")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("POST")
}

type GistsGetCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsGetCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("GET")
}

type GistsGetCommentCmd struct {
	internal.BaseCmd
	CommentId int64  `required:"" name:"comment_id"`
	GistId    string `required:"" name:"gist_id"`
}

func (c *GistsGetCommentCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/comments/:comment_id")
	c.UpdateURLPath("comment_id", c.CommentId)
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("GET")
}

type GistsGetRevisionCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
	Sha    string `required:"" name:"sha"`
}

func (c *GistsGetRevisionCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/:sha")
	c.UpdateURLPath("gist_id", c.GistId)
	c.UpdateURLPath("sha", c.Sha)
	return c.DoRequest("GET")
}

type GistsListCmd struct {
	internal.BaseCmd
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
	Since   string `name:"since"`
}

func (c *GistsListCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists")
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("since", c.Since)
	return c.DoRequest("GET")
}

type GistsListCommentsCmd struct {
	internal.BaseCmd
	GistId  string `required:"" name:"gist_id"`
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
}

func (c *GistsListCommentsCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/comments")
	c.UpdateURLPath("gist_id", c.GistId)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	return c.DoRequest("GET")
}

type GistsListCommitsCmd struct {
	internal.BaseCmd
	GistId  string `required:"" name:"gist_id"`
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
}

func (c *GistsListCommitsCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/commits")
	c.UpdateURLPath("gist_id", c.GistId)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	return c.DoRequest("GET")
}

type GistsListForUserCmd struct {
	internal.BaseCmd
	Page     int64  `name:"page"`
	PerPage  int64  `name:"per_page"`
	Since    string `name:"since"`
	Username string `required:"" name:"username"`
}

func (c *GistsListForUserCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/users/:username/gists")
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("since", c.Since)
	c.UpdateURLPath("username", c.Username)
	return c.DoRequest("GET")
}

type GistsListForksCmd struct {
	internal.BaseCmd
	GistId  string `required:"" name:"gist_id"`
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
}

func (c *GistsListForksCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/forks")
	c.UpdateURLPath("gist_id", c.GistId)
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	return c.DoRequest("GET")
}

type GistsListPublicCmd struct {
	internal.BaseCmd
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
	Since   string `name:"since"`
}

func (c *GistsListPublicCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/public")
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("since", c.Since)
	return c.DoRequest("GET")
}

type GistsListStarredCmd struct {
	internal.BaseCmd
	Page    int64  `name:"page"`
	PerPage int64  `name:"per_page"`
	Since   string `name:"since"`
}

func (c *GistsListStarredCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/starred")
	c.UpdateURLQuery("page", c.Page)
	c.UpdateURLQuery("per_page", c.PerPage)
	c.UpdateURLQuery("since", c.Since)
	return c.DoRequest("GET")
}

type GistsStarCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsStarCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/star")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("PUT")
}

type GistsUnstarCmd struct {
	internal.BaseCmd
	GistId string `required:"" name:"gist_id"`
}

func (c *GistsUnstarCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/star")
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("DELETE")
}

type GistsUpdateCommentCmd struct {
	internal.BaseCmd
	Body      string `required:"" name:"body"`
	CommentId int64  `required:"" name:"comment_id"`
	GistId    string `required:"" name:"gist_id"`
}

func (c *GistsUpdateCommentCmd) Run(isValueSetMap map[string]bool) error {
	c.SetIsValueSetMap(isValueSetMap)
	c.SetURLPath("/gists/:gist_id/comments/:comment_id")
	c.UpdateBody("body", c.Body)
	c.UpdateURLPath("comment_id", c.CommentId)
	c.UpdateURLPath("gist_id", c.GistId)
	return c.DoRequest("PATCH")
}
