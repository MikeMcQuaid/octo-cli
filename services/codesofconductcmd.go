// Code generated by octo-cli/generator; DO NOT EDIT.

package services

type CodesOfConductCmd struct {
	ListConductCodes CodesOfConductListConductCodesCmd `cmd:"" help:"List all codes of conduct"`
	GetConductCode   CodesOfConductGetConductCodeCmd   `cmd:"" help:"Get an individual code of conduct"`
	GetForRepo       CodesOfConductGetForRepoCmd       `cmd:"" help:"Get the contents of a repository's code of conduct"`
}

type CodesOfConductListConductCodesCmd struct {
	baseCmd
}

func (c *CodesOfConductListConductCodesCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/codes_of_conduct"
	return c.doRequest("GET")
}

type CodesOfConductGetConductCodeCmd struct {
	baseCmd
	Key string `required:"" name:"key"`
}

func (c *CodesOfConductGetConductCodeCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/codes_of_conduct/:key"
	c.updateURLPath("key", c.Key)
	return c.doRequest("GET")
}

type CodesOfConductGetForRepoCmd struct {
	baseCmd
	Owner string `required:"" name:"owner"`
	Repo  string `required:"" name:"repo"`
}

func (c *CodesOfConductGetForRepoCmd) Run(isValueSetMap map[string]bool) error {
	c.isValueSetMap = isValueSetMap
	c.url.Path = "/repos/:owner/:repo/community/code_of_conduct"
	c.updateURLPath("owner", c.Owner)
	c.updateURLPath("repo", c.Repo)
	return c.doRequest("GET")
}
