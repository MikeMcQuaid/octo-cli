// Code generated by go-github-cli/generator DO NOT EDIT
package organizationssvc

import (
	"bytes"
	"os"
	"path/filepath"
	"testing"

	"github.com/alecthomas/kong"
	"github.com/dnaeon/go-vcr/recorder"
	"github.com/stretchr/testify/require"
)

func init() {
	tkn, ok := os.LookupEnv("TESTUSER_TOKEN")
	if !ok {
		tkn = "deadbeef"
	}
	os.Setenv("GITHUB_TOKEN", tkn)
}

func startVCR(t *testing.T, recPath string) *recorder.Recorder {
	t.Helper()
	var err error
	rec, err := recorder.New(recPath)
	require.Nil(t, err)
	transportWrapper = rec
	return rec
}

func testCmdLine(t *testing.T, fixtureName string, cmdStruct interface{}, cmdline ...string) (stdout bytes.Buffer, stderr bytes.Buffer, err error) {
	t.Helper()
	rec := startVCR(t, filepath.Join("testdata", "fixtures", fixtureName))
	defer rec.Stop()
	p, e := kong.New(cmdStruct)
	require.Nil(t, e)
	p.Stdout = &stdout
	p.Stderr = &stderr
	k, e := p.Parse(cmdline)
	require.Nil(t, e)
	err = k.Run()
	return
}
